/*
What Am I

.

API version: 0.1.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IUsageItemDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IUsageItemDTO{}

// IUsageItemDTO A datapoint to describe the usage of a particular item.
type IUsageItemDTO struct {
	Name *string `json:"name,omitempty"`
	StartTime *int32 `json:"startTime,omitempty"`
	EndTime *int32 `json:"endTime,omitempty"`
}

// NewIUsageItemDTO instantiates a new IUsageItemDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIUsageItemDTO() *IUsageItemDTO {
	this := IUsageItemDTO{}
	return &this
}

// NewIUsageItemDTOWithDefaults instantiates a new IUsageItemDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIUsageItemDTOWithDefaults() *IUsageItemDTO {
	this := IUsageItemDTO{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IUsageItemDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IUsageItemDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IUsageItemDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IUsageItemDTO) SetName(v string) {
	o.Name = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *IUsageItemDTO) GetStartTime() int32 {
	if o == nil || IsNil(o.StartTime) {
		var ret int32
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IUsageItemDTO) GetStartTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *IUsageItemDTO) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int32 and assigns it to the StartTime field.
func (o *IUsageItemDTO) SetStartTime(v int32) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *IUsageItemDTO) GetEndTime() int32 {
	if o == nil || IsNil(o.EndTime) {
		var ret int32
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IUsageItemDTO) GetEndTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *IUsageItemDTO) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int32 and assigns it to the EndTime field.
func (o *IUsageItemDTO) SetEndTime(v int32) {
	o.EndTime = &v
}

func (o IUsageItemDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IUsageItemDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	return toSerialize, nil
}

type NullableIUsageItemDTO struct {
	value *IUsageItemDTO
	isSet bool
}

func (v NullableIUsageItemDTO) Get() *IUsageItemDTO {
	return v.value
}

func (v *NullableIUsageItemDTO) Set(val *IUsageItemDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableIUsageItemDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableIUsageItemDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIUsageItemDTO(val *IUsageItemDTO) *NullableIUsageItemDTO {
	return &NullableIUsageItemDTO{value: val, isSet: true}
}

func (v NullableIUsageItemDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIUsageItemDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


